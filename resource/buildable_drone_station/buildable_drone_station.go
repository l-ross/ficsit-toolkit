// Code generated by ../../gen/docs_json. DO NOT EDIT.

package BuildableDroneStation

import (
	"fmt"

	"github.com/l-ross/ficsit-toolkit/resource"
)

type FGBuildableDroneStation struct {
	Name                                 string
	ClassName                            string
	MAddToSignificanceManager            bool
	MAllowColoring                       bool
	MAttachmentPoints                    string
	MBatteryClasses                      string
	MBatteryStorageSizeX                 int
	MBatteryStorageSizeY                 int
	MBuildEffectSpeed                    float64
	MCachedSkeletalMeshes                string
	MCanChangePotential                  bool
	MCreateClearanceMeshRepresentation   bool
	MDescription                         string
	MDisplayName                         string
	MDoesHaveShutdownAnimation           bool
	MDroneDockingLocationLocal           string
	MDroneDockingQueue                   string
	MDroneDockingStartLocationLocal      string
	MDroneQueueRadius                    float64
	MDroneQueueSeparationRadius          float64
	MDroneQueueVerticalSeparation        float64
	MEffectUpdateInterval                float64
	MFluidStackSizeDefault               resource.StackSize
	MFluidStackSizeMultiplier            int
	MForceNetUpdateOnRegisterPlayer      bool
	MHideOnBuildEffectStart              bool
	MHighlightVector                     string
	MInteractingPlayers                  string
	MIsUseable                           bool
	MItemTransferringStage               string
	MMapText                             string
	MMaxPotential                        float64
	MMaxPotentialIncreasePerCrystal      float64
	MMinPotential                        float64
	MMinimumProducingTime                float64
	MMinimumStoppedTime                  float64
	MNumCyclesForProductivity            int
	MOnHasPowerChanged                   string
	MOnHasProductionChanged              string
	MOnHasStandbyChanged                 string
	MPowerConsumption                    float64
	MPowerConsumptionExponent            float64
	MShouldModifyWorldGrid               bool
	MShouldShowAttachmentPointVisuals    bool
	MShouldShowHighlight                 bool
	MSignificanceRange                   float64
	MSkipBuildEffect                     bool
	MSocketStoppedAkComponents           string
	MStackTransferSize                   float64
	MStationHasDronesInQueue             bool
	MStoppedAkComponents                 string
	MStoppedProducingAnimationSounds     bool
	MStorageSizeX                        int
	MStorageSizeY                        int
	MToggleDormancyOnInteraction         bool
	MTransferProgress                    float64
	MTransferSpeed                       float64
	MTripInformationSampleCount          int
	MTripPowerCost                       float64
	MTripPowerPerMeterCost               float64
	M_DockingStates                      resource.DroneDockingState
	M_OffsetTime                         float64
	MaxRenderDistance                    float64
	OnReplicationDetailActorCreatedEvent string
}

var (
	DroneStation = FGBuildableDroneStation{
		Name:                               "DroneStation",
		ClassName:                          "Build_DroneStation_C",
		MAddToSignificanceManager:          true,
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBatteryClasses:                    `(BlueprintGeneratedClass'"/Game/FactoryGame/Resource/Parts/Battery/Desc_Battery.Desc_Battery_C"')`,
		MBatteryStorageSizeX:               1,
		MBatteryStorageSizeY:               1,
		MBuildEffectSpeed:                  0.000000,
		MCachedSkeletalMeshes:              ``,
		MCanChangePotential:                true,
		MCreateClearanceMeshRepresentation: true,
		MDescription: `Drone Ports can have one other Port assigned as their transport destination.
Each Drone Port can contain a single Drone, which transports available input back and forth between its home and destination Ports.

The Drone Port interface provides delivery details and allows management of Port connections.`,
		MDisplayName:                         `Drone Port`,
		MDoesHaveShutdownAnimation:           false,
		MDroneDockingLocationLocal:           `(X=0.000000,Y=0.000000,Z=570.000000)`,
		MDroneDockingQueue:                   ``,
		MDroneDockingStartLocationLocal:      `(X=-800.000000,Y=0.000000,Z=860.000000)`,
		MDroneQueueRadius:                    2000.000000,
		MDroneQueueSeparationRadius:          0.000000,
		MDroneQueueVerticalSeparation:        800.000000,
		MEffectUpdateInterval:                0.000000,
		MFluidStackSizeDefault:               resource.Fluid,
		MFluidStackSizeMultiplier:            1,
		MForceNetUpdateOnRegisterPlayer:      false,
		MHideOnBuildEffectStart:              false,
		MHighlightVector:                     `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                  ``,
		MIsUseable:                           true,
		MItemTransferringStage:               `ITS_NONE`,
		MMapText:                             ``,
		MMaxPotential:                        1.000000,
		MMaxPotentialIncreasePerCrystal:      0.500000,
		MMinPotential:                        0.010000,
		MMinimumProducingTime:                2.000000,
		MMinimumStoppedTime:                  5.000000,
		MNumCyclesForProductivity:            20,
		MOnHasPowerChanged:                   `()`,
		MOnHasProductionChanged:              `()`,
		MOnHasStandbyChanged:                 `()`,
		MPowerConsumption:                    100.000000,
		MPowerConsumptionExponent:            1.600000,
		MShouldModifyWorldGrid:               true,
		MShouldShowAttachmentPointVisuals:    false,
		MShouldShowHighlight:                 false,
		MSignificanceRange:                   18000.000000,
		MSkipBuildEffect:                     false,
		MSocketStoppedAkComponents:           ``,
		MStackTransferSize:                   1.000000,
		MStationHasDronesInQueue:             false,
		MStoppedAkComponents:                 ``,
		MStoppedProducingAnimationSounds:     false,
		MStorageSizeX:                        3,
		MStorageSizeY:                        6,
		MToggleDormancyOnInteraction:         false,
		MTransferProgress:                    0.000000,
		MTransferSpeed:                       0.000000,
		MTripInformationSampleCount:          1,
		MTripPowerCost:                       24000.000000,
		MTripPowerPerMeterCost:               6.000000,
		M_DockingStates:                      resource.Undocked,
		M_OffsetTime:                         0.000000,
		MaxRenderDistance:                    -1.000000,
		OnReplicationDetailActorCreatedEvent: `()`,
	}
)

func GetByClassName(className string) (FGBuildableDroneStation, error) {
	if v, ok := ClassNameToDescriptor[className]; ok {
		return v, nil
	}

	return FGBuildableDroneStation{}, fmt.Errorf("failed to find FGBuildableDroneStation with class name %s", className)
}

var ClassNameToDescriptor = map[string]FGBuildableDroneStation{
	"Build_DroneStation_C": DroneStation,
}
