// Code generated by ../../gen/docs_json. DO NOT EDIT.

package BuildablePipelineSupport

import (
	"fmt"
)

type FGBuildablePipelineSupport struct {
	Name                               string
	ClassName                          string
	MAllowColoring                     bool
	MAttachmentPoints                  string
	MBuildEffectSpeed                  float64
	MCanStack                          bool
	MCreateClearanceMeshRepresentation bool
	MDescription                       string
	MDisplayName                       string
	MForceNetUpdateOnRegisterPlayer    bool
	MHideOnBuildEffectStart            bool
	MHighlightVector                   string
	MInteractingPlayers                string
	MIsUseable                         bool
	MLength                            float64
	MShouldModifyWorldGrid             bool
	MShouldShowAttachmentPointVisuals  bool
	MShouldShowHighlight               bool
	MSkipBuildEffect                   bool
	MStackHeight                       float64
	MToggleDormancyOnInteraction       bool
	MUseStaticHeight                   bool
	MVerticalAngle                     float64
	MaxRenderDistance                  float64
}

var (
	HyperPoleStackable = FGBuildablePipelineSupport{
		Name:                               "HyperPoleStackable",
		ClassName:                          "Build_HyperPoleStackable_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MCanStack:                          true,
		MCreateClearanceMeshRepresentation: false,
		MDescription:                       `Support for Hypertubes. Can be stacked on other stackable supports.`,
		MDisplayName:                       `Stackable Hypertube Support`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MLength:                            200.000000,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MStackHeight:                       200.000000,
		MToggleDormancyOnInteraction:       false,
		MUseStaticHeight:                   true,
		MVerticalAngle:                     0.000000,
		MaxRenderDistance:                  -1.000000,
	}

	PipeHyperSupport = FGBuildablePipelineSupport{
		Name:                               "PipeHyperSupport",
		ClassName:                          "Build_PipeHyperSupport_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MCanStack:                          false,
		MCreateClearanceMeshRepresentation: false,
		MDescription:                       `Supports for Hypertubes to allow for longer distances.`,
		MDisplayName:                       `Hypertube Support`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MLength:                            200.000000,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MStackHeight:                       200.000000,
		MToggleDormancyOnInteraction:       false,
		MUseStaticHeight:                   false,
		MVerticalAngle:                     0.000000,
		MaxRenderDistance:                  -1.000000,
	}

	PipeSupportStackable = FGBuildablePipelineSupport{
		Name:                               "PipeSupportStackable",
		ClassName:                          "Build_PipeSupportStackable_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MCanStack:                          true,
		MCreateClearanceMeshRepresentation: false,
		MDescription:                       `Support for pipelines. Can be stacked on other stackable supports.`,
		MDisplayName:                       `Stackable Pipeline Support`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MLength:                            200.000000,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MStackHeight:                       200.000000,
		MToggleDormancyOnInteraction:       false,
		MUseStaticHeight:                   true,
		MVerticalAngle:                     0.000000,
		MaxRenderDistance:                  -1.000000,
	}

	PipelineSupport = FGBuildablePipelineSupport{
		Name:                               "PipelineSupport",
		ClassName:                          "Build_PipelineSupport_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MCanStack:                          false,
		MCreateClearanceMeshRepresentation: false,
		MDescription: `Can be used as a connection for pipelines. The height of the support can be adjusted.
Useful to route pipelines in a more controlled manner and over long distances.`,
		MDisplayName:                      `Pipeline Support`,
		MForceNetUpdateOnRegisterPlayer:   false,
		MHideOnBuildEffectStart:           false,
		MHighlightVector:                  `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:               ``,
		MIsUseable:                        false,
		MLength:                           200.000000,
		MShouldModifyWorldGrid:            true,
		MShouldShowAttachmentPointVisuals: false,
		MShouldShowHighlight:              false,
		MSkipBuildEffect:                  false,
		MStackHeight:                      200.000000,
		MToggleDormancyOnInteraction:      false,
		MUseStaticHeight:                  false,
		MVerticalAngle:                    0.000000,
		MaxRenderDistance:                 -1.000000,
	}
)

func GetByClassName(className string) (FGBuildablePipelineSupport, error) {
	if v, ok := ClassNameToDescriptor[className]; ok {
		return v, nil
	}

	return FGBuildablePipelineSupport{}, fmt.Errorf("failed to find FGBuildablePipelineSupport with class name %s", className)
}

var ClassNameToDescriptor = map[string]FGBuildablePipelineSupport{
	"Build_HyperPoleStackable_C":   HyperPoleStackable,
	"Build_PipeHyperSupport_C":     PipeHyperSupport,
	"Build_PipeSupportStackable_C": PipeSupportStackable,
	"Build_PipelineSupport_C":      PipelineSupport,
}
