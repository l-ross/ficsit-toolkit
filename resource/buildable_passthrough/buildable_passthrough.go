// Code generated by ../../gen/docs_json. DO NOT EDIT.

package BuildablePassthrough

import (
	"fmt"
)

type FGBuildablePassthrough struct {
	Name                               string
	ClassName                          string
	MAllowColoring                     bool
	MAttachmentPoints                  string
	MBuildEffectSpeed                  float64
	MClearanceHeightMin                float64
	MClearanceThickness                float64
	MCreateClearanceMeshRepresentation bool
	MDescription                       string
	MDisplayName                       string
	MEndCapRotation                    string
	MEndCapTranslation                 string
	MForceNetUpdateOnRegisterPlayer    bool
	MGenerateTunnelCollision           bool
	MHideOnBuildEffectStart            bool
	MHighlightVector                   string
	MInteractingPlayers                string
	MIsUseable                         bool
	MMidMeshLength                     float64
	MMidMeshRotation                   string
	MShouldModifyWorldGrid             bool
	MShouldShowAttachmentPointVisuals  bool
	MShouldShowHighlight               bool
	MSkipBuildEffect                   bool
	MSnappedBuildingThickness          float64
	MToggleDormancyOnInteraction       bool
	MUseSoftClearance                  bool
	MaxRenderDistance                  float64
}

var (
	FoundationPassthroughHypertube = FGBuildablePassthrough{
		Name:                               "FoundationPassthroughHypertube",
		ClassName:                          "Build_FoundationPassthrough_Hypertube_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MClearanceHeightMin:                50.000000,
		MClearanceThickness:                80.000000,
		MCreateClearanceMeshRepresentation: true,
		MDescription:                       `Can be attached to Foundations, allowing Hypertubes to pass through them.`,
		MDisplayName:                       `Hypertube Floor Hole`,
		MEndCapRotation:                    `(Pitch=90.000000,Yaw=0.000000,Roll=0.000000)`,
		MEndCapTranslation:                 `(X=100.000000,Y=0.000000,Z=0.000000)`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MGenerateTunnelCollision:           true,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MMidMeshLength:                     100.000000,
		MMidMeshRotation:                   `(Pitch=90.000000,Yaw=0.000000,Roll=0.000000)`,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MSnappedBuildingThickness:          0.000000,
		MToggleDormancyOnInteraction:       false,
		MUseSoftClearance:                  true,
		MaxRenderDistance:                  -1.000000,
	}

	FoundationPassthroughLift = FGBuildablePassthrough{
		Name:                               "FoundationPassthroughLift",
		ClassName:                          "Build_FoundationPassthrough_Lift_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MClearanceHeightMin:                50.000000,
		MClearanceThickness:                80.000000,
		MCreateClearanceMeshRepresentation: true,
		MDescription:                       `Can be attached to Foundations, allowing Conveyor Lifts to pass through them.`,
		MDisplayName:                       `Conveyor Lift Floor Hole`,
		MEndCapRotation:                    `(Pitch=0.000000,Yaw=0.000000,Roll=0.000000)`,
		MEndCapTranslation:                 `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MGenerateTunnelCollision:           false,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MMidMeshLength:                     25.000000,
		MMidMeshRotation:                   `(Pitch=180.000000,Yaw=0.000000,Roll=0.000000)`,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MSnappedBuildingThickness:          0.000000,
		MToggleDormancyOnInteraction:       false,
		MUseSoftClearance:                  true,
		MaxRenderDistance:                  -1.000000,
	}

	FoundationPassthroughPipe = FGBuildablePassthrough{
		Name:                               "FoundationPassthroughPipe",
		ClassName:                          "Build_FoundationPassthrough_Pipe_C",
		MAllowColoring:                     true,
		MAttachmentPoints:                  ``,
		MBuildEffectSpeed:                  0.000000,
		MClearanceHeightMin:                50.000000,
		MClearanceThickness:                80.000000,
		MCreateClearanceMeshRepresentation: true,
		MDescription:                       `Can be attached to Foundations, allowing Pipelines to pass through them.`,
		MDisplayName:                       `Pipeline Floor Hole`,
		MEndCapRotation:                    `(Pitch=90.000000,Yaw=0.000000,Roll=0.000000)`,
		MEndCapTranslation:                 `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MForceNetUpdateOnRegisterPlayer:    false,
		MGenerateTunnelCollision:           true,
		MHideOnBuildEffectStart:            false,
		MHighlightVector:                   `(X=0.000000,Y=0.000000,Z=0.000000)`,
		MInteractingPlayers:                ``,
		MIsUseable:                         false,
		MMidMeshLength:                     100.000000,
		MMidMeshRotation:                   `(Pitch=90.000000,Yaw=0.000000,Roll=0.000000)`,
		MShouldModifyWorldGrid:             true,
		MShouldShowAttachmentPointVisuals:  false,
		MShouldShowHighlight:               false,
		MSkipBuildEffect:                   false,
		MSnappedBuildingThickness:          0.000000,
		MToggleDormancyOnInteraction:       false,
		MUseSoftClearance:                  true,
		MaxRenderDistance:                  -1.000000,
	}
)

func GetByClassName(className string) (FGBuildablePassthrough, error) {
	if v, ok := ClassNameToDescriptor[className]; ok {
		return v, nil
	}

	return FGBuildablePassthrough{}, fmt.Errorf("failed to find FGBuildablePassthrough with class name %s", className)
}

var ClassNameToDescriptor = map[string]FGBuildablePassthrough{
	"Build_FoundationPassthrough_Hypertube_C": FoundationPassthroughHypertube,
	"Build_FoundationPassthrough_Lift_C":      FoundationPassthroughLift,
	"Build_FoundationPassthrough_Pipe_C":      FoundationPassthroughPipe,
}
